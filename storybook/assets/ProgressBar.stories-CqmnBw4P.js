import{j as f}from"./jsx-runtime-DR9Q75dM.js";import{r as m}from"./index-DRjF_FHU.js";import{P as $}from"./index-Dz3SudTg.js";import{c as D}from"./utils-DcIm4c_J.js";import{T as O}from"./Typogrpahy-DZj-QM6w.js";import"./index-rX-Bn4lm.js";function B(e,r=[]){let s=[];function o(l,i){const n=m.createContext(i),a=s.length;s=[...s,i];function v(c){const{scope:u,children:x,...p}=c,V=(u==null?void 0:u[e][a])||n,M=m.useMemo(()=>p,Object.values(p));return f.jsx(V.Provider,{value:M,children:x})}function d(c,u){const x=(u==null?void 0:u[e][a])||n,p=m.useContext(x);if(p)return p;if(i!==void 0)return i;throw new Error(`\`${c}\` must be used within \`${l}\``)}return v.displayName=l+"Provider",[v,d]}const t=()=>{const l=s.map(i=>m.createContext(i));return function(n){const a=(n==null?void 0:n[e])||l;return m.useMemo(()=>({[`__scope${e}`]:{...n,[e]:a}}),[n,a])}};return t.scopeName=e,[o,L(t,...r)]}function L(...e){const r=e[0];if(e.length===1)return r;const s=()=>{const o=e.map(t=>({useScope:t(),scopeName:t.scopeName}));return function(l){const i=o.reduce((n,{useScope:a,scopeName:v})=>{const c=a(l)[`__scope${v}`];return{...n,...c}},{});return m.useMemo(()=>({[`__scope${r.scopeName}`]:i}),[i])}};return s.scopeName=r.scopeName,s}var E="Progress",N=100,[X,Z]=B(E),[G,q]=X(E),y=m.forwardRef((e,r)=>{const{__scopeProgress:s,value:o=null,max:t,getValueLabel:l=F,...i}=e;(t||t===0)&&!_(t)&&console.error(U(`${t}`,"Progress"));const n=_(t)?t:N;o!==null&&!b(o,n)&&console.error(k(`${o}`,"Progress"));const a=b(o,n)?o:null,v=P(a)?l(a,n):void 0;return f.jsx(G,{scope:s,value:a,max:n,children:f.jsx($.div,{"aria-valuemax":n,"aria-valuemin":0,"aria-valuenow":P(a)?a:void 0,"aria-valuetext":v,role:"progressbar","data-state":w(a,n),"data-value":a??void 0,"data-max":n,...i,ref:r})})});y.displayName=E;var C="ProgressIndicator",R=m.forwardRef((e,r)=>{const{__scopeProgress:s,...o}=e,t=q(C,s);return f.jsx($.div,{"data-state":w(t.value,t.max),"data-value":t.value??void 0,"data-max":t.max,...o,ref:r})});R.displayName=C;function F(e,r){return`${Math.round(e/r*100)}%`}function w(e,r){return e==null?"indeterminate":e===r?"complete":"loading"}function P(e){return typeof e=="number"}function _(e){return P(e)&&!isNaN(e)&&e>0}function b(e,r){return P(e)&&!isNaN(e)&&e<=r&&e>=0}function U(e,r){return`Invalid prop \`max\` of value \`${e}\` supplied to \`${r}\`. Only numbers greater than 0 are valid max values. Defaulting to \`${N}\`.`}function k(e,r){return`Invalid prop \`value\` of value \`${e}\` supplied to \`${r}\`. The \`value\` prop must be:
  - a positive number
  - less than the value passed to \`max\` (or ${N} if no \`max\` prop is set)
  - \`null\` or \`undefined\` if the progress is indeterminate.

Defaulting to \`null\`.`}var A=y,z=R;const T=m.forwardRef(({className:e,value:r,time:s=33,...o},t)=>f.jsx(A,{ref:t,className:D("relative h-2 w-full overflow-hidden rounded-full bg-primary/20",e),...o,children:f.jsx(z,{className:`h-full w-full flex-1 ${(r||0)>s?"bg-[#2563eb]":"bg-red-600"} transition-all`,style:{transform:`translateX(-${100-(r||0)}%)`}})}));T.displayName=A.displayName;T.__docgenInfo={description:"",methods:[],props:{time:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"33",computed:!1}}}};const j=({maxTime:e=10,onTimeEnd:r})=>{const[o,t]=m.useState(100),l=10,i=1e3/l,n=d=>100/(d*l),a=(d,c,u)=>x=>{const p=x-d;return p<=0?(c(u),0):p},v=(d,c,u)=>{d===0&&u&&u();const x=setInterval(()=>{t(p=>a(c,clearInterval,x)(p))},i);return x};return m.useEffect(()=>{const d=n(e),c=v(o,d,r??(()=>{}));return()=>clearInterval(c)},[e,o,r]),f.jsxs("div",{className:"w-full flex justify-center flex-col items-center gap-2",children:[f.jsx(T,{value:o,max:100,className:"max-w-[60%]",time:50}),f.jsx(O,{text:`${(o/100*e).toFixed(1)}초`,size:"xl",color:"black"})]})};j.__docgenInfo={description:`@description
ProgressBar 컴포넌트는 시간이 지남에 따라 감소하는 진행 막대를 표시합니다.
최대 시간과 시간이 끝났을 때 호출될 콜백 함수를 받습니다.

@example
<ProgressBar maxTime={10} onTimeEnd={() => console.log('Time ended!')} />

@param {number} maxTime - 진행 막대가 실행될 최대 시간(초)입니다.
@param {() => void} onTimeEnd - 시간이 끝났을 때 호출될 콜백 함수입니다.

@returns {JSX.Element} 렌더링된 진행 막대 컴포넌트입니다.`,methods:[],displayName:"ProgressBar",props:{maxTime:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"10",computed:!1}},onTimeEnd:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""}}};const ee={title:"Components/ProgressBar",component:j,tags:["autodocs"]},g={args:{maxTime:10,onTimeEnd:()=>{alert("time end")}}};var h,I,S;g.parameters={...g.parameters,docs:{...(h=g.parameters)==null?void 0:h.docs,source:{originalSource:`{
  args: {
    maxTime: 10,
    onTimeEnd: () => {
      alert('time end');
    }
  }
}`,...(S=(I=g.parameters)==null?void 0:I.docs)==null?void 0:S.source}}};const re=["Default"];export{g as Default,re as __namedExportsOrder,ee as default};
