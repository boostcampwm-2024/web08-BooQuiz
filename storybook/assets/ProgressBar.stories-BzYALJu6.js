import{j as p}from"./jsx-runtime-DR9Q75dM.js";import{r as u}from"./index-DRjF_FHU.js";import{P as I}from"./index-Dz3SudTg.js";import{c as E}from"./utils-DcIm4c_J.js";import{T as O}from"./Typogrpahy-DZj-QM6w.js";import"./index-rX-Bn4lm.js";function L(e,r=[]){let s=[];function i(l,a){const o=u.createContext(a),n=s.length;s=[...s,a];function c(f){const{scope:d,children:x,...m}=f,h=(d==null?void 0:d[e][n])||o,A=u.useMemo(()=>m,Object.values(m));return p.jsx(h.Provider,{value:A,children:x})}function g(f,d){const x=(d==null?void 0:d[e][n])||o,m=u.useContext(x);if(m)return m;if(a!==void 0)return a;throw new Error(`\`${f}\` must be used within \`${l}\``)}return c.displayName=l+"Provider",[c,g]}const t=()=>{const l=s.map(a=>u.createContext(a));return function(o){const n=(o==null?void 0:o[e])||l;return u.useMemo(()=>({[`__scope${e}`]:{...o,[e]:n}}),[o,n])}};return t.scopeName=e,[i,T(t,...r)]}function T(...e){const r=e[0];if(e.length===1)return r;const s=()=>{const i=e.map(t=>({useScope:t(),scopeName:t.scopeName}));return function(l){const a=i.reduce((o,{useScope:n,scopeName:c})=>{const f=n(l)[`__scope${c}`];return{...o,...f}},{});return u.useMemo(()=>({[`__scope${r.scopeName}`]:a}),[a])}};return s.scopeName=r.scopeName,s}var w="Progress",b=100,[q,Z]=L(w),[k,F]=q(w),M=u.forwardRef((e,r)=>{const{__scopeProgress:s,value:i=null,max:t,getValueLabel:l=G,...a}=e;(t||t===0)&&!S(t)&&console.error(X(`${t}`,"Progress"));const o=S(t)?t:b;i!==null&&!_(i,o)&&console.error(z(`${i}`,"Progress"));const n=_(i,o)?i:null,c=P(n)?l(n,o):void 0;return p.jsx(k,{scope:s,value:n,max:o,children:p.jsx(I.div,{"aria-valuemax":o,"aria-valuemin":0,"aria-valuenow":P(n)?n:void 0,"aria-valuetext":c,role:"progressbar","data-state":R(n,o),"data-value":n??void 0,"data-max":o,...a,ref:r})})});M.displayName=w;var j="ProgressIndicator",C=u.forwardRef((e,r)=>{const{__scopeProgress:s,...i}=e,t=F(j,s);return p.jsx(I.div,{"data-state":R(t.value,t.max),"data-value":t.value??void 0,"data-max":t.max,...i,ref:r})});C.displayName=j;function G(e,r){return`${Math.round(e/r*100)}%`}function R(e,r){return e==null?"indeterminate":e===r?"complete":"loading"}function P(e){return typeof e=="number"}function S(e){return P(e)&&!isNaN(e)&&e>0}function _(e,r){return P(e)&&!isNaN(e)&&e<=r&&e>=0}function X(e,r){return`Invalid prop \`max\` of value \`${e}\` supplied to \`${r}\`. Only numbers greater than 0 are valid max values. Defaulting to \`${b}\`.`}function z(e,r){return`Invalid prop \`value\` of value \`${e}\` supplied to \`${r}\`. The \`value\` prop must be:
  - a positive number
  - less than the value passed to \`max\` (or ${b} if no \`max\` prop is set)
  - \`null\` or \`undefined\` if the progress is indeterminate.

Defaulting to \`null\`.`}var V=M,H=C;const N=u.forwardRef(({className:e,value:r,time:s=33,...i},t)=>p.jsx(V,{ref:t,className:E("relative h-2 w-full overflow-hidden rounded-full bg-primary/20",e),...i,children:p.jsx(H,{className:`h-full w-full flex-1 ${(r||0)>s?"bg-[#2563eb]":"bg-red-600"} transition-all`,style:{transform:`translateX(-${100-(r||0)}%)`}})}));N.displayName=V.displayName;N.__docgenInfo={description:"",methods:[],props:{time:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"33",computed:!1}}}};const B=({deadlineTime:e,onTimeEnd:r})=>{const s=u.useRef(e-Date.now()),i=()=>{const c=Date.now(),g=s.current,f=e-c;return Math.max(0,f/g*100)},t=()=>{const c=Date.now();return Math.max(0,(e-c)/1e3)},[l,a]=u.useState(i()),[o,n]=u.useState(t());return u.useEffect(()=>{const c=Date.now(),g=s.current;if(e<=c){a(0),n(0),r==null||r();return}const d=setInterval(()=>{const x=Date.now(),m=e-x;if(m<=0)return a(0),n(0),r==null||r(),!1;const h=m/g*100;return a(Math.max(0,Math.min(100,h))),n(m/1e3),!0},100);return()=>clearInterval(d)},[e,r]),p.jsxs("div",{className:"w-full flex justify-center flex-col items-center gap-2",children:[p.jsx(N,{value:l,max:100,className:"max-w-[60%]"}),p.jsx(O,{text:`남은시간 ${Math.max(0,o).toFixed(1)}초`,size:"xl",color:"black",bold:!0})]})};B.__docgenInfo={description:`@description
ProgressBar 컴포넌트는 주어진 마감 시간까지 남은 시간을 시각적으로 표시합니다.
현재 시간과 마감 시간 사이의 진행도를 보여주며, 시간이 다 되면 콜백을 실행합니다.

@example
<ProgressBar
  deadlineTime={new Date(Date.now() + 30000)}
  onTimeEnd={() => console.log('Time ended!')}
/>`,methods:[],displayName:"ProgressBar",props:{deadlineTime:{required:!0,tsType:{name:"number"},description:""},onTimeEnd:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""}}};const ee={title:"Components/ProgressBar",component:B,tags:["autodocs"]},v={args:{deadlineTime:Date.now()+3e4,onTimeEnd:()=>{alert("time end")}}};var D,$,y;v.parameters={...v.parameters,docs:{...(D=v.parameters)==null?void 0:D.docs,source:{originalSource:`{
  args: {
    deadlineTime: Date.now() + 30000,
    onTimeEnd: () => {
      alert('time end');
    }
  }
}`,...(y=($=v.parameters)==null?void 0:$.docs)==null?void 0:y.source}}};const re=["Default"];export{v as Default,re as __namedExportsOrder,ee as default};
